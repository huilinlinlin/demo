<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.5.5</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.example</groupId>
	<artifactId>demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>demo</name>
	<description>Demo project for Spring Boot</description>
	<url/>
	<licenses>
		<license/>
	</licenses>
	<developers>
		<developer/>
	</developers>
	<scm>
		<connection/>
		<developerConnection/>
		<tag/>
		<url/>
	</scm>
	<properties>
		<java.version>21</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<frontend-maven-plugin.version>1.15.1</frontend-maven-plugin.version>
		<node.version>v22.14.0</node.version>
		<yarn.version>v1.22.22</yarn.version>
		<frontend-src-dir>${project.basedir}/src/main/frontend</frontend-src-dir>
		<skip.frontend>false</skip.frontend>
		<cxf.version>4.1.3</cxf.version>
		<mockito.version>5.2.0</mockito.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.microsoft.sqlserver</groupId>
			<artifactId>mssql-jdbc</artifactId>
		</dependency>
		<!-- Spring Boot JPA -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			
			<!-- 1. frontend-maven-plugin: 負責執行 npm/yarn 指令 (確保構建過程的可重現性與跨平台一致性)-->
			<plugin>
			<groupId>com.github.eirslett</groupId>
			<artifactId>frontend-maven-plugin</artifactId>
			<version>${frontend-maven-plugin.version}</version>
			<configuration>
				<nodeVersion>${node.version}</nodeVersion>
				<yarnVersion>${yarn.version}</yarnVersion>
				<workingDirectory>${frontend-src-dir}</workingDirectory>
				<skip>${skip.frontend}</skip>
			</configuration>
			<executions>
				<!-- 安裝 Node.js 和 Yarn -->
				<execution>
					<id>install-node-yarn</id>
					<goals>
					<goal>install-node-and-yarn</goal>
					</goals>
					<phase>generate-resources</phase>
					<configuration>
					<!-- 增加安裝逾時時間 -->
					<installDirectory>${frontend-src-dir}</installDirectory>
					<downloadRoot>https://nodejs.org/dist/</downloadRoot>
					<skip>${skip.frontend}</skip>
					</configuration>
				</execution>

				<!-- 安裝前端依賴 -->
				<execution>
					<id>yarn-install</id>
					<goals>
					<goal>yarn</goal>
					</goals>
					<phase>generate-resources</phase>
					<configuration>
					<arguments>install</arguments>
					<!-- 增加執行逾時時間，預設是 0 (無逾時) -->
					<yarnInheritsProxyConfigFromMaven>true</yarnInheritsProxyConfigFromMaven>
					<skip>${skip.frontend}</skip>
					<environmentVariables>
						<NODE_TLS_REJECT_UNAUTHORIZED>0</NODE_TLS_REJECT_UNAUTHORIZED>
					</environmentVariables>
					</configuration>
				</execution>

				<!-- 編譯前端資源 -->
				<execution>
					<id>yarn-build</id>
					<goals>
					<goal>yarn</goal>
					</goals>
					<phase>generate-resources</phase>
					<configuration>
					<!-- 這裡用 Maven property 帶入 mode -->
					<arguments>run build --mode ${vite.mode}</arguments>
					<!-- 增加執行逾時時間 -->
					<environmentVariables>
						<CI>false</CI>
						<NODE_OPTIONS>--max-old-space-size=4096</NODE_OPTIONS>
						<NODE_TLS_REJECT_UNAUTHORIZED>0</NODE_TLS_REJECT_UNAUTHORIZED>
					</environmentVariables>
					<skip>${skip.frontend}</skip>
					</configuration>
				</execution>
			</executions>
			</plugin>
			<!-- 2. maven-resources-plugin: 將前端打包結果移動到 Spring Boot static 目錄 -->
			<plugin>
			<artifactId>maven-resources-plugin</artifactId>
			<executions>
				<execution>
				<id>copy-resources</id>
				<phase>process-resources</phase>
				<goals>
					<goal>copy-resources</goal>
				</goals>
				<configuration>
					<outputDirectory>${project.build.outputDirectory}/static</outputDirectory>
					<resources>
					<resource>
						<directory>${frontend-src-dir}/build</directory> <!-- Vue 預設為 dist；React 可改成 build -->
						<filtering>false</filtering>
					</resource>
					</resources>
				</configuration>
				</execution>
			</executions>
			</plugin>

		</plugins>
	</build>

</project>
